{
  "permissions": {
    "allow": [
      "Bash(xargs:*)",
      "WebSearch",
      "Bash(pnpm add:*)",
      "Bash(pnpm run dev:*)",
      "Bash(pnpm run lint)",
      "Bash(pnpm lint:*)",
      "Bash(pnpm run lint:*)",
      "Bash(tail:*)",
      "Bash(grep:*)",
      "Bash(pnpm run:*)",
      "Bash(wc:*)",
      "Bash(ls:*)",
      "Bash(cat:*)",
      "Bash(find:*)",
      "Bash(while read file)",
      "Bash(do if ! grep -q \"useLanguage\" \"$file\")",
      "Bash(then echo \"$file\")",
      "Bash(fi)",
      "Bash(done)",
      "Bash(pnpm exec tsc:*)",
      "Bash(pnpm build)",
      "Bash(bun scripts/crawlee/generate-scale-insert.ts:*)",
      "Bash(node:*)",
      "Bash(wrangler d1 execute:*)",
      "Bash(rg:*)",
      "mcp__ide__getDiagnostics",
      "Bash(pnpm db:generate:*)",
      "Bash(pnpm db:migrate:dev:*)",
      "Bash(curl:*)",
      "Bash(if grep -q \"ANTHROPIC_API_KEY\" .env)",
      "Bash(then echo \"✓ ANTHROPIC_API_KEY found in .env\")",
      "Bash(else echo \"✗ ANTHROPIC_API_KEY not found in .env\")",
      "Bash(if grep -q \"ANTHROPIC_API_KEY\" .env.local)",
      "Bash(then echo \"✓ ANTHROPIC_API_KEY found in .env.local\")",
      "Bash(else echo \"✗ ANTHROPIC_API_KEY not found in .env.local\")",
      "Bash(tsx scripts/interpretation/generate-batch.ts:*)",
      "Bash(pnpm tsx:*)",
      "Bash(pnpm exec:*)",
      "Bash(pnpm interpretation:generate:*)",
      "Bash(if grep -q \"ANTHROPIC_API_KEY\" /Users/isaac/workspace/pdt/xcoa/.env)",
      "Bash(pnpm dev:*)",
      "Bash(for:*)",
      "Bash(do echo \"=== $file ===\")",
      "Bash(head:*)",
      "WebFetch(domain:www.creative-tim.com)",
      "WebFetch(domain:github.com)",
      "Bash(pnpm i18n:check:*)",
      "Bash(tsx scripts/i18n-check.ts:*)",
      "Bash(pnpm type-check:*)",
      "Bash(git diff:*)",
      "Bash(git status:*)",
      "Bash(pnpm typecheck:*)",
      "Bash(npx tsc:*)",
      "WebFetch(domain:www.usecoa.com)",
      "Bash(shuf:*)",
      "Bash(while read f)",
      "Bash(do echo \"=== $f ===\")",
      "WebFetch(domain:mengte.online)",
      "Bash(do cat \"$f\")",
      "Bash(bun:*)",
      "WebFetch(domain:www.cxmed.cn)",
      "Bash(wait)",
      "WebFetch(domain:www.healthmeasures.net)",
      "WebFetch(domain:www.assessmentcenter.net)",
      "WebFetch(domain:cde.nlm.nih.gov)",
      "WebFetch(domain:en.wikipedia.org)",
      "Bash(pnpm install:*)",
      "Bash(pnpm list:*)",
      "Bash(pnpm remove:*)",
      "Bash(npx playwright test:*)",
      "SlashCommand(/workflow:session:start:*)",
      "Bash(mkdir:*)",
      "Bash(touch:*)",
      "SlashCommand(/workflow:tools:context-gather:*)",
      "Bash(~/.claude/scripts/get_modules_by_depth.sh:*)",
      "SlashCommand(/workflow:tools:concept-enhanced:*)",
      "Bash(~/.claude/scripts/gemini-wrapper:*)",
      "SlashCommand(/workflow:tools:task-generate:*)",
      "SlashCommand(/workflow:session:complete)",
      "Bash(SKIP_LINTER=true pnpm build:*)",
      "Bash(bash:*)",
      "Bash(jq:*)",
      "Bash(do jq:*)",
      "Bash(paste:*)",
      "Bash(awk:*)",
      "Bash(do echo \"Task: $f\")",
      "mcp__playwright__browser_navigate",
      "mcp__playwright__browser_click",
      "mcp__playwright__browser_take_screenshot",
      "mcp__playwright__browser_evaluate",
      "Bash(pnpm tsc:*)",
      "Bash(TOTAL_TASKS=4:*)",
      "Bash(COMPLETED_TASKS=4)",
      "Bash(echo:*)",
      "SlashCommand(/workflow:ui-design:capture:*)",
      "SlashCommand(/workflow:ui-design:style-extract:*)",
      "SlashCommand(/workflow:ui-design:layout-extract:*)",
      "SlashCommand(/workflow:ui-design:generate:*)"
    ],
    "deny": [],
    "ask": []
  }
}
